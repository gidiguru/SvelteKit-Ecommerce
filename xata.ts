// Generated by Xata Codegen 0.29.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "email_list",
    columns: [
      {
        name: "email",
        type: "varchar(255)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "key",
        type: "varchar(20)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "subscribed_at",
        type: "timestamp without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "unsubscribed_at",
        type: "timestamp without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "order",
    columns: [
      {
        name: "status",
        type: "bb_vg55apm7qd76r3u30i9074k77g_sd7rsv.status",
        notNull: true,
        unique: false,
        defaultValue: "'new'::bb_vg55apm7qd76r3u30i9074k77g_sd7rsv.status",
      },
      {
        name: "stripe_customer_id",
        type: "varchar(100)",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "stripe_order_id",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "timestamp",
        type: "timestamp without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "total_price",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "order_product",
    columns: [
      {
        name: "id",
        type: "varchar(20)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "order_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "product_type_code",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "quantity",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "product",
    columns: [
      {
        name: "desc",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "gradient_color_end",
        type: "varchar(20)",
        notNull: true,
        unique: false,
        defaultValue: "'to-indigo-400'::character varying",
      },
      {
        name: "gradient_color_start",
        type: "varchar(20)",
        notNull: true,
        unique: false,
        defaultValue: "'from-red-600'::character varying",
      },
      {
        name: "gradient_color_via",
        type: "varchar(20)",
        notNull: true,
        unique: false,
        defaultValue: "'via-purple-500'::character varying",
      },
      {
        name: "id",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "name",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "product_image",
    columns: [
      {
        name: "cloudinary_id",
        type: "varchar(255)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "height",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "is_primary",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
      },
      {
        name: "is_vertical",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
      },
      {
        name: "order",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
      {
        name: "product_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "width",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "product_review",
    columns: [
      {
        name: "id",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "product_id",
        type: "varchar(100)",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "rating",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "review_text",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "timestamp",
        type: "timestamp without time zone",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "product_type",
    columns: [
      {
        name: "code",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "height",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "is_available",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "true",
      },
      {
        name: "name",
        type: "varchar(255)",
        notNull: true,
        unique: false,
        defaultValue: "'my product'::character varying",
      },
      {
        name: "price",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "product_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "stripe_price_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "stripe_product_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "width",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "product_tag",
    columns: [
      {
        name: "desc",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "name",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
    ],
  },
  {
    name: "product_to_product_tag",
    columns: [
      {
        name: "product_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "tag_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "session",
    columns: [
      {
        name: "expires_at",
        type: "timestamp without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "user_id",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "user",
    columns: [
      {
        name: "email",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "first_name",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "varchar(100)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "is_admin",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "last_name",
        type: "varchar(100)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "provider",
        type: "bb_vg55apm7qd76r3u30i9074k77g_sd7rsv.provider",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "provider_id",
        type: "varchar(255)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "stripe_customer_id",
        type: "varchar(100)",
        notNull: false,
        unique: true,
        defaultValue: null,
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type EmailList = InferredTypes["email_list"];
export type EmailListRecord = EmailList & XataRecord;

export type Order = InferredTypes["order"];
export type OrderRecord = Order & XataRecord;

export type OrderProduct = InferredTypes["order_product"];
export type OrderProductRecord = OrderProduct & XataRecord;

export type Product = InferredTypes["product"];
export type ProductRecord = Product & XataRecord;

export type ProductImage = InferredTypes["product_image"];
export type ProductImageRecord = ProductImage & XataRecord;

export type ProductReview = InferredTypes["product_review"];
export type ProductReviewRecord = ProductReview & XataRecord;

export type productType = InferredTypes["product_type"];
export type productTypeRecord = productType & XataRecord;

export type ProductTag = InferredTypes["product_tag"];
export type ProductTagRecord = ProductTag & XataRecord;

export type ProductToProductTag = InferredTypes["product_to_product_tag"];
export type ProductToProductTagRecord = ProductToProductTag & XataRecord;

export type Session = InferredTypes["session"];
export type SessionRecord = Session & XataRecord;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type DatabaseSchema = {
  email_list: EmailListRecord;
  order: OrderRecord;
  order_product: OrderProductRecord;
  product: ProductRecord;
  product_image: ProductImageRecord;
  product_review: ProductReviewRecord;
  product_type: productTypeRecord;
  product_tag: ProductTagRecord;
  product_to_product_tag: ProductToProductTagRecord;
  session: SessionRecord;
  user: UserRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://gidiguru-s-workspace-sd7rsv.us-east-1.xata.sh/db/sveltekit-ecommerce:main",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
